name: Deploy to AWS

on:
  push:
    branches:
      - main  # Set your preferred branch for deployment (e.g., main or master)

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: aws-actions

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up AWS CLI
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2  # Set your AWS region
      
    # Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
 
       # Step 4: Install MySQL Clien
    - name: Install MySQL Client
      run: sudo apt-get install mysql-client -y  # Install MySQL client for running queries


      # Step 5: Initialize MySQL Database (optional)
    - name: Initialize MySQL Database
      run: |
        echo "Waiting for the RDS MySQL instance to be available..."
        sleep 60  # Wait for DB to initialize (adjust as necessary)
        RDS_ENDPOINT=$(aws rds describe-db-instances --query "DBInstances[?DBInstanceIdentifier=='backend-db'].Endpoint.Address" --output text)
        mysql -h $RDS_ENDPOINT -u root -p${{ secrets.DB_PASSWORD }} mydb < ./ELP_PATH_DB/elp_path_db_16.sql
        echo "Database initialization complete!"

    # Step 6: Build and Push Backend Docker image to ECR
    - name: Build and Push Backend Docker image
      run: |
        docker build -t backend-app ./ELP_PATH_BE  # Adjust path to your backend Dockerfile directory
        docker tag backend-app:latest ${{ secrets.BACKEND_REPO_URI }}:latest
        docker push ${{ secrets.BACKEND_REPO_URI }}:latest

  
    # Step 7: Deploy ECS Service for Backend
    - name: Deploy ECS backend service
      run: |
        echo "Updating ECS Backend Service..."
        BACKEND_TASK_DEFINITION_ARN=${{ secrets.BACKEND_TASK_DEFINITION_ARN }}
        aws ecs update-service --cluster my-cluster-back --service backend-service --task-definition $BACKEND_TASK_DEFINITION_ARN --force-new-deployment
   

    - name: Verify ECS services
      run: |
         aws ecs describe-services --cluster my-cluster-back --services backend-service  
